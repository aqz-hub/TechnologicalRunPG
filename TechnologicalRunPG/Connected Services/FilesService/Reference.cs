//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechnologicalRunPG.FilesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
    [System.SerializableAttribute()]
    public partial class PublicServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TechnologicalRunPG.FilesService.PublicServiceException InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TechnologicalRunPG.FilesService.PublicServiceException InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.elma-bpm.ru/api/", ConfigurationName="FilesService.IFilesService")]
    public interface IFilesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/FileSize", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/FileSizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TechnologicalRunPG.FilesService.PublicServiceException), Action="http://www.elma-bpm.ru/api/IFilesService/FileSizePublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        long FileSize(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/FileSize", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/FileSizeResponse")]
        System.Threading.Tasks.Task<long> FileSizeAsync(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/Download", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/DownloadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TechnologicalRunPG.FilesService.PublicServiceException), Action="http://www.elma-bpm.ru/api//DownloadPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        System.IO.Stream Download(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/Download", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/DownloadResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/Upload", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/UploadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TechnologicalRunPG.FilesService.PublicServiceException), Action="http://www.elma-bpm.ru/api//UploadPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        System.Guid Upload(System.IO.Stream body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/Upload", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/UploadResponse")]
        System.Threading.Tasks.Task<System.Guid> UploadAsync(System.IO.Stream body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/PreviewFileTypes", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/PreviewFileTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TechnologicalRunPG.FilesService.PublicServiceException), Action="http://www.elma-bpm.ru/api//PreviewFileTypesPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        string[] PreviewFileTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/PreviewFileTypes", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/PreviewFileTypesResponse")]
        System.Threading.Tasks.Task<string[]> PreviewFileTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/DownloadPreview", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/DownloadPreviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TechnologicalRunPG.FilesService.PublicServiceException), Action="http://www.elma-bpm.ru/api//DownloadPreviewPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        System.IO.Stream DownloadPreview(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IFilesService/DownloadPreview", ReplyAction="http://www.elma-bpm.ru/api/IFilesService/DownloadPreviewResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadPreviewAsync(System.Guid uid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFilesServiceChannel : TechnologicalRunPG.FilesService.IFilesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FilesServiceClient : System.ServiceModel.ClientBase<TechnologicalRunPG.FilesService.IFilesService>, TechnologicalRunPG.FilesService.IFilesService {
        
        public FilesServiceClient() {
        }
        
        public FilesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FilesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long FileSize(System.Guid uid) {
            return base.Channel.FileSize(uid);
        }
        
        public System.Threading.Tasks.Task<long> FileSizeAsync(System.Guid uid) {
            return base.Channel.FileSizeAsync(uid);
        }
        
        public System.IO.Stream Download(System.Guid uid) {
            return base.Channel.Download(uid);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(System.Guid uid) {
            return base.Channel.DownloadAsync(uid);
        }
        
        public System.Guid Upload(System.IO.Stream body) {
            return base.Channel.Upload(body);
        }
        
        public System.Threading.Tasks.Task<System.Guid> UploadAsync(System.IO.Stream body) {
            return base.Channel.UploadAsync(body);
        }
        
        public string[] PreviewFileTypes() {
            return base.Channel.PreviewFileTypes();
        }
        
        public System.Threading.Tasks.Task<string[]> PreviewFileTypesAsync() {
            return base.Channel.PreviewFileTypesAsync();
        }
        
        public System.IO.Stream DownloadPreview(System.Guid uid) {
            return base.Channel.DownloadPreview(uid);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadPreviewAsync(System.Guid uid) {
            return base.Channel.DownloadPreviewAsync(uid);
        }
    }
}
